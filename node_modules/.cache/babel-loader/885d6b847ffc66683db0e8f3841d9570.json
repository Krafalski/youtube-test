{"ast":null,"code":"var _jsxFileName = \"/Users/karolinrafalski/dev/curriculum-pursuit/react/project-youtube-clone/src/Components/Comments.js\";\nimport Comment from \"./Comment\";\nimport CommentForm from \"./CommentForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Comments(_ref) {\n  let {\n    addComment,\n    videoId,\n    comments\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"A list of comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        addComment: addComment,\n        videoId: videoId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), comments.filter(comment => comment.id === videoId).map((comment, i) => {\n        return /*#__PURE__*/_jsxDEV(Comment, {\n          comment: comment\n        }, comment.id + i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 20\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["Comment","CommentForm","Comments","addComment","videoId","comments","filter","comment","id","map","i"],"sources":["/Users/karolinrafalski/dev/curriculum-pursuit/react/project-youtube-clone/src/Components/Comments.js"],"sourcesContent":["import Comment from \"./Comment\";\nimport CommentForm from \"./CommentForm\";\n\nfunction Comments({ addComment, videoId, comments }) {\n  return (\n    <div>\n      <header>\n        <h3>A list of comments</h3>\n      </header>\n      <main>\n        <CommentForm addComment={addComment} videoId={videoId} />\n        {/* filter over comments and show comments */}\n        {comments\n          .filter((comment) => comment.id === videoId)\n          .map((comment, i) => {\n            return <Comment key={comment.id + i} comment={comment} />;\n          })}\n      </main>\n    </div>\n  );\n}\n\nexport default Comments;\n"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,SAASC,QAAT,OAAqD;EAAA,IAAnC;IAAEC,UAAF;IAAcC,OAAd;IAAuBC;EAAvB,CAAmC;EACnD,oBACE;IAAA,wBACE;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAA,wBACE,QAAC,WAAD;QAAa,UAAU,EAAEF,UAAzB;QAAqC,OAAO,EAAEC;MAA9C;QAAA;QAAA;QAAA;MAAA,QADF,EAGGC,QAAQ,CACNC,MADF,CACUC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeJ,OADrC,EAEEK,GAFF,CAEM,CAACF,OAAD,EAAUG,CAAV,KAAgB;QACnB,oBAAO,QAAC,OAAD;UAA8B,OAAO,EAAEH;QAAvC,GAAcA,OAAO,CAACC,EAAR,GAAaE,CAA3B;UAAA;UAAA;UAAA;QAAA,QAAP;MACD,CAJF,CAHH;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD;;KAjBQR,Q;AAmBT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}